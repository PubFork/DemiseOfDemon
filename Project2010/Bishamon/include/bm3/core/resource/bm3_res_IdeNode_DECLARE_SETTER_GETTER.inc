// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.
BM3_DECLARE_SETTER_GETTER_REF(StringType, Basic_Meta_Name);
BM3_DECLARE_SETTER_GETTER_REF(ml::color_rgba<float>, Basic_Meta_NodeColor);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Basic_Meta_Display);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Basic_Meta_Enable);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Basic_Meta_PreviewOffset);
BM3_DECLARE_SETTER_GETTER_VALUE(NodeTypeConst, Basic_Meta_NodeType);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Basic_Meta_OptimizeBit);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Basic_Meta_TotalLife);
BM3_DECLARE_SETTER_GETTER_VALUE(EmitterTypeConst, Basic_Basic_EmitterType);
BM3_DECLARE_SETTER_GETTER_VALUE(CameraTypeConst, Basic_Basic_CameraType);
BM3_DECLARE_SETTER_GETTER_VALUE(Image2dTypeConst, Basic_Basic_Image2dType);
BM3_DECLARE_SETTER_GETTER_VALUE(ObjectTypeConst, Basic_Basic_ObjectType);
BM3_DECLARE_SETTER_GETTER_VALUE(FieldTypeConst, Basic_Basic_FieldType);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Basic_Basic_AreaDisplay);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Basic_Basic_ActiveStart);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Basic_Basic_ActiveStartRange);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Basic_Basic_RootLife);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Basic_Basic_Life);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Basic_Basic_LifeRange);
BM3_DECLARE_SETTER_GETTER_VALUE(ExpirationTypeConst, Basic_Basic_ExpirationType);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Basic_Basic_SortPriority);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Basic_Basic_ZSort);
BM3_DECLARE_SETTER_GETTER_REF(UserDataType, Basic_Basic_UserData);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Basic_Basic_AdvancedFrame);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Basic_Basic_WholeZSort);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Basic_Basic_Version1_5);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Basic_Basic_InterchangedBm2);
BM3_DECLARE_SETTER_GETTER_REF(StringType, Basic_Basic_ReferenceNodeRelativePath);
BM3_DECLARE_SETTER_GETTER_REF(StringType, Basic_Basic_ReferenceNodeName);
BM3_DECLARE_SETTER_GETTER_VALUE(TranslateParentNodeInfluenceTypeConst, Basic_ParentNodeInfluence_TranslateParentNodeInfluenceType);
BM3_DECLARE_SETTER_GETTER_VALUE(RotateParentNodeInfluenceTypeConst, Basic_ParentNodeInfluence_RotateParentNodeInfluenceType);
BM3_DECLARE_SETTER_GETTER_VALUE(ScaleParentNodeInfluenceTypeConst, Basic_ParentNodeInfluence_ScaleParentNodeInfluenceType);
BM3_DECLARE_SETTER_GETTER_VALUE(MatrixParentNodeInfluenceTypeConst, Basic_ParentNodeInfluence_MatrixParentNodeInfluenceType);
BM3_DECLARE_SETTER_GETTER_VALUE(AlphaParentNodeInfluenceTypeConst, Basic_ParentNodeInfluence_AlphaParentNodeInfluenceType);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Basic_ParentNodeInfluence_ParentAlphaRate);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Basic_ParentNodeInfluence_ParentColorRate);
BM3_DECLARE_SETTER_GETTER_VALUE(GenerateTypeConst, Generate_Basic_GenerateType);
BM3_DECLARE_SETTER_GETTER_VALUE(RandomSeedTypeConst, Generate_Basic_RandomSeedType);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Generate_Basic_RandomSeed);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Generate_Constant_GenerateCount);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Generate_Constant_GenerateTime);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Generate_Constant_EndlessRepeat);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Generate_Constant_RepeatTime);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Generate_Constant_Interval);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Generate_Constant_IntervalRange);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Generate_Timing_EndlessRepeat);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Generate_Timing_RepeatCount);
BM3_DECLARE_SETTER_GETTER_REF(FloatCurveType, Generate_Timing_Timing);
BM3_DECLARE_SETTER_GETTER_VALUE(GenerateShapeTypeConst, GenerateShape_Basic_GenerateShapeType);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, GenerateShape_Basic_Display);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, GenerateShape_Basic_Normal);
BM3_DECLARE_SETTER_GETTER_REF(StringType, GenerateShape_Basic_ModelRelativePath);
BM3_DECLARE_SETTER_GETTER_REF(StringType, GenerateShape_Basic_ModelName);
BM3_DECLARE_SETTER_GETTER_VALUE(float, GenerateShape_Area_Inside);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, GenerateShape_Area_Outside);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, GenerateShape_Area_Slope);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, GenerateShape_Area_Scale);
BM3_DECLARE_SETTER_GETTER_VALUE(float, GenerateShape_HorizontalArea_StartAngle);
BM3_DECLARE_SETTER_GETTER_VALUE(float, GenerateShape_HorizontalArea_EndAngle);
BM3_DECLARE_SETTER_GETTER_VALUE(float, GenerateShape_VerticalArea_StartAngle);
BM3_DECLARE_SETTER_GETTER_VALUE(float, GenerateShape_VerticalArea_EndAngle);
BM3_DECLARE_SETTER_GETTER_VALUE(TranslateTypeConst, Translate_Basic_TranslateType);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Translate_Value_Initial);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Translate_Value_Range);
BM3_DECLARE_SETTER_GETTER_REF(VectorCurveType, Translate_Value_Curve);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Translate_Speed_Initial);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Translate_Speed_Range);
BM3_DECLARE_SETTER_GETTER_REF(VectorCurveType, Translate_Speed_Curve);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Translate_Acceleration_Initial);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Translate_Acceleration_Range);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Translate_Gravity_Value);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Translate_Deceleration_Value);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Translate_Noise_StartRate);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Translate_Noise_Scale);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Translate_Noise_Frequency);
BM3_DECLARE_SETTER_GETTER_VALUE(TranslateTypeConst, Target_Basic_TranslateType);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Target_Translate_Initial);
BM3_DECLARE_SETTER_GETTER_REF(VectorCurveType, Target_Translate_Curve);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Target_Speed_Initial);
BM3_DECLARE_SETTER_GETTER_REF(VectorCurveType, Target_Speed_Curve);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Distance_Distance_Value);
BM3_DECLARE_SETTER_GETTER_VALUE(RotateTypeConst, Rotate_Basic_RotateType);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Rotate_Value_Initial);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Rotate_Value_InitialX);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Rotate_Value_Range);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Rotate_Value_RangeX);
BM3_DECLARE_SETTER_GETTER_REF(VectorCurveType, Rotate_Value_Curve);
BM3_DECLARE_SETTER_GETTER_REF(FloatCurveType, Rotate_Value_CurveX);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Rotate_Speed_Initial);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Rotate_Speed_InitialX);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Rotate_Speed_Range);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Rotate_Speed_RangeX);
BM3_DECLARE_SETTER_GETTER_REF(VectorCurveType, Rotate_Speed_Curve);
BM3_DECLARE_SETTER_GETTER_REF(FloatCurveType, Rotate_Speed_CurveX);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Rotate_Acceleration_Initial);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Rotate_Acceleration_InitialX);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Rotate_Acceleration_Range);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Rotate_Acceleration_RangeX);
BM3_DECLARE_SETTER_GETTER_VALUE(ScaleTypeConst, Scale_Basic_ScaleType);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Scale_Basic_Square);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Scale_Value_Initial);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Scale_Value_InitialX);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Scale_Value_Range);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Scale_Value_RangeX);
BM3_DECLARE_SETTER_GETTER_REF(VectorCurveType, Scale_Value_Curve);
BM3_DECLARE_SETTER_GETTER_REF(FloatCurveType, Scale_Value_CurveX);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Scale_Speed_Initial);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Scale_Speed_InitialX);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Scale_Speed_Range);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Scale_Speed_RangeX);
BM3_DECLARE_SETTER_GETTER_REF(VectorCurveType, Scale_Speed_Curve);
BM3_DECLARE_SETTER_GETTER_REF(FloatCurveType, Scale_Speed_CurveX);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Scale_Acceleration_Initial);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Scale_Acceleration_InitialX);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Scale_Acceleration_Range);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Scale_Acceleration_RangeX);
BM3_DECLARE_SETTER_GETTER_VALUE(FieldGoalShapeTypeConst, Field_Basic_FieldGoalShapeType);
BM3_DECLARE_SETTER_GETTER_REF(StringType, Field_Basic_ModelRelativePath);
BM3_DECLARE_SETTER_GETTER_REF(StringType, Field_Basic_ModelName);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Field_Area_Inside);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Field_Area_Outside);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Field_Area_Slope);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Field_Area_Scale);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Field_HorizontalArea_StartAngle);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Field_HorizontalArea_EndAngle);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Field_VerticalArea_StartAngle);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Field_VerticalArea_EndAngle);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Field_Term_Start);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Field_Term_End);
BM3_DECLARE_SETTER_GETTER_VALUE(FieldCollisionShapeTypeConst, Field_Basic_FieldCollisionShapeType);
BM3_DECLARE_SETTER_GETTER_VALUE(FieldPlaneTypeConst, Field_Basic_FieldPlaneType);
BM3_DECLARE_SETTER_GETTER_VALUE(FieldPlaneShapeTypeConst, Field_Basic_FieldPlaneShapeType);
BM3_DECLARE_SETTER_GETTER_VALUE(FieldJudgeTypeConst, Field_Basic_FieldJudgeType);
BM3_DECLARE_SETTER_GETTER_VALUE(FieldCollisionSizeTypeConst, Field_Size_FieldCollisionSizeType);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Field_Size_Initial);
BM3_DECLARE_SETTER_GETTER_REF(VectorCurveType, Field_Size_Curve);
BM3_DECLARE_SETTER_GETTER_VALUE(FieldPosTypeConst, Field_Position_FieldPosType);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Field_Position_Initial);
BM3_DECLARE_SETTER_GETTER_REF(VectorCurveType, Field_Position_Curve);
BM3_DECLARE_SETTER_GETTER_VALUE(FieldAxisTypeConst, Field_Axis_FieldAxisType);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Field_Axis_Initial);
BM3_DECLARE_SETTER_GETTER_REF(VectorCurveType, Field_Axis_Curve);
BM3_DECLARE_SETTER_GETTER_VALUE(FieldCollisionSlopeTypeConst, Field_Slope_FieldCollisionSlopeType);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Field_Slope_Initial);
BM3_DECLARE_SETTER_GETTER_REF(VectorCurveType, Field_Slope_Curve);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Field_Judge_Reflection);
BM3_DECLARE_SETTER_GETTER_VALUE(FieldMagnitudeTypeConst, Field_Magnitude_FieldMagnitudeType);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Field_Magnitude_ScaleInfluence);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Field_Magnitude_CentripetalForce);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Field_Magnitude_Initial);
BM3_DECLARE_SETTER_GETTER_REF(FloatCurveType, Field_Magnitude_Curve);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Field_Magnitude_Damp);
BM3_DECLARE_SETTER_GETTER_VALUE(FieldAreaTypeConst, Field_Area_FieldAreaType);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Field_Area_Initial);
BM3_DECLARE_SETTER_GETTER_REF(FloatCurveType, Field_Area_Curve);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Field_Area_Initial3d);
BM3_DECLARE_SETTER_GETTER_REF(VectorCurveType, Field_Area_Curve3d);
BM3_DECLARE_SETTER_GETTER_VALUE(FieldDirectionTypeConst, Field_Direction_FieldDirectionType);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Field_Direction_Initial);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Field_Direction_Range);
BM3_DECLARE_SETTER_GETTER_REF(VectorCurveType, Field_Direction_Curve);
BM3_DECLARE_SETTER_GETTER_VALUE(FieldPositionTypeConst, Field_CenterPosition_FieldPositionType);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Field_CenterPosition_Initial);
BM3_DECLARE_SETTER_GETTER_REF(VectorCurveType, Field_CenterPosition_Curve);
BM3_DECLARE_SETTER_GETTER_VALUE(FieldInfluenceTypeConst, Field_Influence_FieldInfluenceType);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Field_Option_Noise);
BM3_DECLARE_SETTER_GETTER_VALUE(ColorTypeConst, Color_Basic_ColorType);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Color_Basic_Flat);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Color_Basic_RandomSync);
BM3_DECLARE_SETTER_GETTER_REF(ml::color_rgba<float>, Color_Center_Value);
BM3_DECLARE_SETTER_GETTER_REF(ml::color_rgba<float>, Color_Center_Range);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Color_Center_RandomChannelSync);
BM3_DECLARE_SETTER_GETTER_REF(ColorCurveType, Color_Center_Curve);
BM3_DECLARE_SETTER_GETTER_REF(ml::color_rgba<float>, Color_VertexLeftTop_Value);
BM3_DECLARE_SETTER_GETTER_REF(ml::color_rgba<float>, Color_VertexLeftTop_Range);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Color_VertexLeftTop_RandomChannelSync);
BM3_DECLARE_SETTER_GETTER_REF(ColorCurveType, Color_VertexLeftTop_Curve);
BM3_DECLARE_SETTER_GETTER_REF(ml::color_rgba<float>, Color_VertexRightTop_Value);
BM3_DECLARE_SETTER_GETTER_REF(ml::color_rgba<float>, Color_VertexRightTop_Range);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Color_VertexRightTop_RandomChannelSync);
BM3_DECLARE_SETTER_GETTER_REF(ColorCurveType, Color_VertexRightTop_Curve);
BM3_DECLARE_SETTER_GETTER_REF(ml::color_rgba<float>, Color_VertexLeftBottom_Value);
BM3_DECLARE_SETTER_GETTER_REF(ml::color_rgba<float>, Color_VertexLeftBottom_Range);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Color_VertexLeftBottom_RandomChannelSync);
BM3_DECLARE_SETTER_GETTER_REF(ColorCurveType, Color_VertexLeftBottom_Curve);
BM3_DECLARE_SETTER_GETTER_REF(ml::color_rgba<float>, Color_VertexRightBottom_Value);
BM3_DECLARE_SETTER_GETTER_REF(ml::color_rgba<float>, Color_VertexRightBottom_Range);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Color_VertexRightBottom_RandomChannelSync);
BM3_DECLARE_SETTER_GETTER_REF(ColorCurveType, Color_VertexRightBottom_Curve);
BM3_DECLARE_SETTER_GETTER_VALUE(BlendTypeConst, Blend_Basic_BlendType);
BM3_DECLARE_SETTER_GETTER_VALUE(BlendAlphaTypeConst, Blend_Basic_BlendAlphaType);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Blend_Basic_Alpha);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Blend_Basic_Range);
BM3_DECLARE_SETTER_GETTER_REF(FloatCurveType, Blend_Basic_Curve);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Blend_Basic_AlphaTest);
BM3_DECLARE_SETTER_GETTER_VALUE(AlphaTestTypeConst, Blend_Basic_AlphaTestType);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Blend_Basic_AlphaRef);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Material_DrawControl_Culling);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Material_DrawControl_DepthWrite);
BM3_DECLARE_SETTER_GETTER_VALUE(DepthTestTypeConst, Material_DrawControl_DepthTestType);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Material_DrawControl_FogEffect);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Material_DrawControl_Lighting);
BM3_DECLARE_SETTER_GETTER_VALUE(TextureDrawTypeConst, Texture_Basic_TextureDrawType);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Texture_Basic_SpecularFactor);
BM3_DECLARE_SETTER_GETTER_REF(ml::color_rgba<float>, Texture_Basic_SpecularColor);
BM3_DECLARE_SETTER_GETTER_REF(StringType, Texture_Layer1_PictureRelativePath);
BM3_DECLARE_SETTER_GETTER_REF(StringType, Texture_Layer1_PictureName);
BM3_DECLARE_SETTER_GETTER_VALUE(TextureAddressTypeConst, Texture_Layer1_TextureAddressType);
BM3_DECLARE_SETTER_GETTER_VALUE(TextureFilterTypeConst, Texture_Layer1_TextureFilterType);
BM3_DECLARE_SETTER_GETTER_VALUE(TextureAnimationTypeConst, Texture_Layer1_TextureAnimationType);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Texture_Layer1_AnimationSpeed);
BM3_DECLARE_SETTER_GETTER_VALUE(TextureCropAnimationTypeConst, Texture_Layer1_TextureCropAnimationType);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Texture_Layer1_CropRandom);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Texture_Layer1_CropCount);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Texture_Layer1_HScrollSpeed);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Texture_Layer1_VScrollSpeed);
BM3_DECLARE_SETTER_GETTER_REF(TextureType, Texture_Layer1_Pattern);
BM3_DECLARE_SETTER_GETTER_REF(StringType, Texture_Layer2_PictureRelativePath);
BM3_DECLARE_SETTER_GETTER_REF(StringType, Texture_Layer2_PictureName);
BM3_DECLARE_SETTER_GETTER_VALUE(TextureAddressTypeConst, Texture_Layer2_TextureAddressType);
BM3_DECLARE_SETTER_GETTER_VALUE(TextureFilterTypeConst, Texture_Layer2_TextureFilterType);
BM3_DECLARE_SETTER_GETTER_VALUE(TextureAnimationTypeConst, Texture_Layer2_TextureAnimationType);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Texture_Layer2_AnimationSpeed);
BM3_DECLARE_SETTER_GETTER_VALUE(TextureCropAnimationTypeConst, Texture_Layer2_TextureCropAnimationType);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Texture_Layer2_CropRandom);
BM3_DECLARE_SETTER_GETTER_VALUE(int, Texture_Layer2_CropCount);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Texture_Layer2_HScrollSpeed);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Texture_Layer2_VScrollSpeed);
BM3_DECLARE_SETTER_GETTER_REF(TextureType, Texture_Layer2_Pattern);
BM3_DECLARE_SETTER_GETTER_REF(StringType, Model_Basic_ModelRelativePath);
BM3_DECLARE_SETTER_GETTER_REF(StringType, Model_Basic_ModelName);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Model_TextureLayer1_HScrollSpeed);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Model_TextureLayer1_VScrollSpeed);
BM3_DECLARE_SETTER_GETTER_VALUE(TextureAddressTypeConst, Model_TextureLayer1_TextureAddressType);
BM3_DECLARE_SETTER_GETTER_VALUE(TextureFilterTypeConst, Model_TextureLayer1_TextureFilterType);
BM3_DECLARE_SETTER_GETTER_VALUE(TransformTypeConst, Deformation_Basic_TransformType);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Deformation_Basic_CenterPosition);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Deformation_Size_Value);
BM3_DECLARE_SETTER_GETTER_REF(VectorCurveType, Deformation_Size_Curve);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Deformation_VertexLeftTop_Value);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Deformation_VertexLeftTop_Range);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Deformation_VertexRightTop_Value);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Deformation_VertexRightTop_Range);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Deformation_VertexLeftBottom_Value);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Deformation_VertexLeftBottom_Range);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Deformation_VertexRightBottom_Value);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Deformation_VertexRightBottom_Range);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Deformation_Vertex_Value);
BM3_DECLARE_SETTER_GETTER_VALUE(QuadTypeConst, Detail_Basic_QuadType);
BM3_DECLARE_SETTER_GETTER_VALUE(ModelTypeConst, Detail_Basic_ModelType);
BM3_DECLARE_SETTER_GETTER_VALUE(StripeTypeConst, Detail_Basic_StripeType);
BM3_DECLARE_SETTER_GETTER_VALUE(FacingTypeConst, Detail_Basic_FacingType);
BM3_DECLARE_SETTER_GETTER_VALUE(bool, Detail_Soft_EnableSoft);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Detail_Soft_Threshold);
BM3_DECLARE_SETTER_GETTER_VALUE(FieldGoalShapeTypeConst, Goal_Basic_FieldGoalShapeType);
BM3_DECLARE_SETTER_GETTER_REF(StringType, Goal_Basic_ModelRelativePath);
BM3_DECLARE_SETTER_GETTER_REF(StringType, Goal_Basic_ModelName);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Goal_Area_Inside);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Goal_Area_Outside);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Goal_Area_Scale);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Goal_HorizontalArea_StartAngle);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Goal_HorizontalArea_EndAngle);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Goal_VerticalArea_StartAngle);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Goal_VerticalArea_EndAngle);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Goal_Term_Start);
BM3_DECLARE_SETTER_GETTER_VALUE(float, Goal_Term_End);
BM3_DECLARE_SETTER_GETTER_REF(ml::vector3d, Goal_Position_Initial);
